{"version":3,"sources":["components/Header.jsx","api/api.js","components/UserTable.jsx","components/Home.jsx","components/GetAccess.jsx","components/ConfirmPage.jsx","App.js","serviceWorker.js","index.js"],"names":["Header","Navbar","bg","variant","Nav","className","defaultActiveKey","Link","as","NavLink","to","instance","axios","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","error","Promise","reject","api","get","then","r","data","catch","e","response","email","post","id","userId","delete","AccessSwitch","props","value","checkElement","useRef","setAccess","a","currentTarget","current","checked","access","Form","Check","ref","onChange","type","label","UserTable","useState","refresh","setRefresh","users","isAdmin","currentUserEmail","confirmDelete","window","confirm","logout","removeItem","Table","size","striped","bordered","hover","map","i","k","key","scope","length","item","hit","email_confirmed","Button","onClick","Home","setUsers","setCurrentUserEmail","setIsAdmin","useEffect","current_user_email","is_admin","run","GetAccess","redirect","setRedirect","_handleSubmit","formik","useFormik","initialValues","validate","values","errors","test","onSubmit","setSubmitting","setErrors","message","handleSubmit","Group","controlId","Label","Control","required","name","placeholder","handleChange","Text","withRouter","msg","setMsg","match","params","setItem","NotFound","React","Component","App","Container","Row","style","margin","path","render","exact","from","component","Boolean","location","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console"],"mappings":"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","file":"static/js/main.a438bc72.chunk.js","sourcesContent":["import React from \"react\"\nimport {Nav, Navbar} from \"react-bootstrap\"\n\nimport {NavLink} from \"react-router-dom\"\n\nconst Header = () => {\n  return (\n      <Navbar bg=\"dark\" variant=\"dark\">\n        <Nav className=\"mr-auto\" defaultActiveKey={'/home'}>\n          <Nav.Link as={NavLink} to=\"/home\">Home</Nav.Link>\n          <Nav.Link as={NavLink} to=\"/get-access\">Get Access</Nav.Link>\n        </Nav>\n      </Navbar>\n  )\n}\n\nexport default Header","import axios from 'axios'\n\nconst url = '/api/'\n\nconst instance = axios.create({\n  baseURL: url,\n  headers: {\n    'X-Requested-With': 'XMLHttpRequest',\n    'Accept': 'application/json, text/plain, */*',\n    'Content-Type': 'application/json'\n  },\n})\n\ninstance.interceptors.request.use(\n  function (config) {\n    const token = localStorage.getItem(\"token\")\n    if (token)\n      config.headers.Authorization = `Bearer ${token}`\n    return config\n  },\n  function (error) {\n    return Promise.reject (error)\n  }\n)\n\nexport const api = {\n  get_user_list() {\n    return instance.get('users/')\n      .then(r => r.data)\n      .catch(e => e.response.data)\n  },\n  get_access(email){\n    return instance.post('get-access/', {email: email})\n      .then(r => r.data)\n  },\n  set_access(id){\n    return instance.get('set-access/'+id)\n      .then(r => r.data)\n  },\n  confirm(token){\n    return instance.get('confirm/?token='+token)\n      .then(r => r.data)\n      .catch(e => e.response.data)\n  },\n  delete(userId){\n    return instance.delete('delete/'+userId)\n      .then(r => r.data)\n      .catch(e => e.response.data)\n  },\n}","import React, {useRef, useState} from \"react\"\nimport {Button, Table, Form} from \"react-bootstrap\"\nimport {api} from \"../api/api\"\nimport {Redirect} from \"react-router\"\n\n\nconst AccessSwitch = (props) => {\n  const {id, value} = props\n  const checkElement = useRef(value)\n\n  const setAccess = async (e) => {\n    await api.set_access(e.currentTarget.id).then(data => {\n      checkElement.current.checked=data.access\n    })\n  }\n\n\n  return (\n    <Form.Check\n      ref={checkElement}\n      onChange={(e) => setAccess(e)}\n      checked={value}\n      type=\"switch\"\n      id={id}\n      value={value}\n      label=\"\"\n    />\n  )\n}\n\n\nconst UserTable = (props) => {\n  const [refresh, setRefresh] = useState(false)\n  const {users, isAdmin, currentUserEmail} = props\n  const thead = ['#','Email','Token','Hit','Confirmed','Access', 'delete?']\n\n  const confirmDelete = (userId) => {\n    const r = window.confirm(\"Are you sure?\")\n    if (r === true) {\n      api.delete(userId)\n        .then(data => {\n          if (data?.logout)\n            localStorage.removeItem('token')\n          setRefresh(true)\n        })\n    }\n  }\n  return (\n    <>\n      {refresh ? <Redirect to='/' /> : ''}\n      <Table size=\"sm\" striped bordered hover>\n        <thead>\n        <tr>\n          {thead.map( (i, k) => <th key={k} scope=\"col\">{i}</th> )}\n        </tr>\n        </thead>\n        <tbody>\n        {users && users.length > 0 && users.map((item, k) => {\n          return (\n            <tr key={k}>\n              <td>{ item.id}</td>\n              <td>{ item.email }</td>\n              <td>{ item.token }</td>\n              <td>{ item.hit }</td>\n              <td>{ item.email_confirmed ? \"Yes\" : \" No\" }</td>\n              <td>{ isAdmin\n                      ? <AccessSwitch id={item.id} value={item.access} />\n                      : item.access\n                        ? \"Yes\" : \" No\" }</td>\n              <td>\n                {isAdmin\n                  ? <Button variant={\"danger\"} size=\"sm\" onClick={(e) => confirmDelete(item.id)}>del?</Button>\n                  : item.email === currentUserEmail && <Button variant={\"danger\"} size=\"sm\" onClick={(e) => confirmDelete(item.id)}>del?</Button> }\n              </td>\n            </tr>\n          )\n        })\n        }\n        </tbody>\n      </Table>\n    </>\n  )\n}\n\n\nexport default UserTable","import React, {useEffect, useState} from \"react\"\nimport {api} from \"../api/api\"\nimport UserTable from \"./UserTable\"\n\n\nconst Home = () => {\n  const [users, setUsers] = useState([])\n  const [currentUserEmail, setCurrentUserEmail] = useState('')\n  const [access, setAccess] = useState(false)\n  const [isAdmin, setIsAdmin] = useState(false)\n\n  useEffect(() => {\n    const run = async () => {\n      const data = await api.get_user_list()\n      if (data?.access === true){\n        setUsers(data.users)\n        setCurrentUserEmail(data.current_user_email)\n        setAccess(true)\n        setIsAdmin(data.is_admin)\n      }\n      else {\n        setAccess(false)\n      }\n    }\n    run()\n  }, [])\n\n  return (\n    <div>\n      {access\n        ? <UserTable users={users} currentUserEmail={currentUserEmail} isAdmin={isAdmin}/>\n        : <div >Access denied</div>}\n    </div>\n  )\n}\n\nexport default Home","import {api} from \"../api/api\";\nimport {useFormik} from \"formik\";\nimport {Button, Form} from \"react-bootstrap\";\nimport React, {useState} from \"react\";\nimport {Redirect} from \"react-router\";\n\nconst GetAccess = () => {\n\n  const [redirect, setRedirect] = useState(false)\n\n  const  _handleSubmit = async (email) => {\n    return await api.get_access(email)\n  }\n\n  const validate = values => {\n    const errors = {}\n    if (!values.email) {\n      errors.email = 'Required'\n    } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n      errors.email = 'Invalid email address'\n    }\n\n    return errors\n  }\n\n  const formik = useFormik({\n    initialValues: {\n      email: '',\n    },\n    validate,\n    onSubmit: (values, {setSubmitting, setErrors}) => {\n      _handleSubmit(values.email).then(r => {\n        if (r.error){\n          setErrors({email: r.message})\n        } else {\n          setRedirect(true)\n        }\n      })\n      setSubmitting(false)\n    },\n  })\n\n  return(\n    <div>\n      {redirect ? <Redirect to='/confirm' /> : null }\n\n      <h1 className=\"mt-5\">Get access</h1>\n\n      <div className=\"form-row justify-content-center\">\n        <Form onSubmit={formik.handleSubmit}>\n          <Form.Group controlId=\"formBasicEmail\">\n\n            <Form.Label>Email address</Form.Label>\n\n            <Form.Control required name={'email'} type=\"email\" placeholder=\"Enter email\"\n                          onChange={formik.handleChange}  value={formik.values.email} />\n            {formik.errors.email ? <div className=\"text-danger\">{formik.errors.email}</div> : null}\n            <Form.Text className=\"text-muted\">We'll never share your email with anyone else.</Form.Text>\n\n          </Form.Group>\n          <Button variant=\"primary\" type=\"submit\">\n            Allow Access\n          </Button>\n        </Form>\n      </div>\n    </div>\n  )\n}\n\nexport default GetAccess","import React, {useEffect, useState} from \"react\"\nimport {withRouter} from \"react-router\"\nimport {api} from \"../api/api\"\n\n\nconst CheckConfirm = (props) => {\n  const [msg, setMsg] = useState('Check your email, please')\n  const [token] = useState(props.match.params.token)\n\n\n  useEffect(() => {\n\n    const run = async () => {\n      const data = await api.confirm(token)\n      if (data?.token){\n\n        localStorage.setItem(\"token\", data.token)\n        setMsg('Email confirmed!')\n      }\n      else if (data?.error)\n        setMsg('Wrong token!')\n    }\n    if (token){\n      run()\n    }\n\n  }, [token])\n\n  return (\n    <div>{msg}</div>\n  )\n}\n\n\nexport default withRouter(CheckConfirm)","import React from 'react'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport './App.css'\nimport {BrowserRouter} from \"react-router-dom\"\nimport {Switch, Route, Redirect} from \"react-router\"\n\nimport {Container, Row} from \"react-bootstrap\"\n\nimport Header from \"./components/Header\"\nimport Home from \"./components/Home\"\nimport GetAccess from \"./components/GetAccess\"\nimport CheckConfirm from \"./components/ConfirmPage\"\n\n\nclass NotFound extends React.Component{\n  render(){\n    return <h2>Ресурс не найден</h2>\n  }\n}\n\n\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Header />\n      <Container>\n        <Row className=\"justify-content-md-center\" style={{margin: 30 }}>\n          <Switch>\n\n            <Route path='/home' render={() => <Home />} />\n            <Route path='/get-access' render={() => <GetAccess />} />\n            <Route path='/confirm/:token?' render={() => <CheckConfirm />} />\n\n            <Redirect exact from=\"/\" to=\"/home\" />\n            <Route component={NotFound} />\n          </Switch>\n        </Row>\n      </Container>\n    </BrowserRouter>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}